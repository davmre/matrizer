
<table .global>
  <tr>
    <td colspan=2>
      <h1> Matrizer
  <tr>
    <td style="width: 35%; padding-right: 36px" valign=top>
        <p>Matrizer is an optimizing compiler for matrix expressions. Given approximate sizes of the matrices involved, it searches for mathematically equivalent expressions requiring fewer FLOPs to compute. The result is output as Python/numpy or MATLAB code.
       <p><i>Beware:</i> this is still highly unpolished alpha-level software. Many features are missing, and there is no guarantee that the expressions output are optimal or even correct. It's best to think of the results as a source of inspiration rather than something to be blindly trusted.
       <p><b>TODO:</b> write some documentation.
    <td style="width: 64%;" valign=top>
      <form #matrizerPrgm>
        <textarea rows=20 name=program #prgmtext>
        <b>Try an example:
        <select name="examples" selected="custom" #examples>
           <option value="custom" >Custom
           $forall ex <- examples
               <option value=#{sname ex}>#{lname ex}
        $forall ex <- examples
             <div .hiddenExample ##{sname ex}>#{txt ex}
        <span style="float: right">
          <input type=submit value=Optimize #optimize>
        <div #advancedOptions>
          Iterations: <input type=number name=iters value=5 min=1 max=100 step=1 style = "width: 3em">
          Beam size: <input type=number name=beamSize value=20 min=1 step=1 max=10000 style = "width: 5em">
          Rewrite depth: <input type=number name=nRewrites value=4 min=1 step=1 max=100 style = "width: 3em">
      <p>
      <div #error>
      <div #loadingparse><b><font color=red>Parsing expression...</font></b>
      <div #parseresult>
        <p>Naive AST:
        <pre #naiveast>
        <p>Naive computation requires 
           <span #nflops>
           \FLOPs. 
      <div #loadingopt><b><font color=red>Optimizing, please wait...</font></b>
      <div #opterror>
      <div #concreteresult>
        <p>Transformed to concrete expression requiring 
           <span #cflops> 
           \FLOPs:
        <pre #concreteast>
      <div #optimizeresult>
        <p>Result requires 
           <span #oflops>
           \FLOPs.
        <p>Optimized AST:
        <pre #optast>
        <p>Python/numpy code:
        <pre #numpy>
        <p>MATLAB code:
        <pre #matlab>
